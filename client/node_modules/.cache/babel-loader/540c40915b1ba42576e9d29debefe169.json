{"ast":null,"code":"var _jsxFileName = \"/Users/santiagoprario/Desktop/ChallengePersonal/client/src/Components/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Search from './Search';\nimport style from './Styles/Home.module.css';\nimport { getCurrent, getForecast, deleteCity } from '../Redux/Actions';\nimport Weather from './Weather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  var _cityCurrent$location, _cityCurrent$location2, _cityCurrent$current, _cityCurrent$current$, _cityCurrent$current2, _cityCurrent$current3, _cityCurrent$current4;\n\n  const searchedCities = useSelector(state => state.searchCities);\n  const dispatch = useDispatch();\n  const cityCurrent = useSelector(state => state.cityCurrent);\n  const cityForecast = useSelector(state => state.cityForecast);\n  const forecastCities = useSelector(state => state.forecastCities);\n  useEffect(() => {\n    dispatch(getCurrent());\n    dispatch(getForecast());\n  }, []);\n\n  const deleteSelected = city => {\n    dispatch(deleteCity(city));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: style.title,\n      children: \"WEATHER APP CHALLENGE PERSONAL PAY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.actualWeather,\n      children: cityCurrent ? /*#__PURE__*/_jsxDEV(Weather, {\n        name: (_cityCurrent$location = cityCurrent.location) === null || _cityCurrent$location === void 0 ? void 0 : _cityCurrent$location.name,\n        country: cityCurrent === null || cityCurrent === void 0 ? void 0 : (_cityCurrent$location2 = cityCurrent.location) === null || _cityCurrent$location2 === void 0 ? void 0 : _cityCurrent$location2.country,\n        img: (_cityCurrent$current = cityCurrent.current) === null || _cityCurrent$current === void 0 ? void 0 : (_cityCurrent$current$ = _cityCurrent$current.condition) === null || _cityCurrent$current$ === void 0 ? void 0 : _cityCurrent$current$.icon,\n        condition: (_cityCurrent$current2 = cityCurrent.current) === null || _cityCurrent$current2 === void 0 ? void 0 : (_cityCurrent$current3 = _cityCurrent$current2.condition) === null || _cityCurrent$current3 === void 0 ? void 0 : _cityCurrent$current3.text,\n        temp: (_cityCurrent$current4 = cityCurrent.current) === null || _cityCurrent$current4 === void 0 ? void 0 : _cityCurrent$current4.temp_c,\n        forecast: cityForecast === null || cityForecast === void 0 ? void 0 : cityForecast.forecast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 26\n      }, this) : 'none'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.search,\n      children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }, this), forecastCities.length > 0 && forecastCities.map(f => /*#__PURE__*/_jsxDEV(Weather, {\n      name: f.location.name,\n      country: f.location.country //  xClose={deleteSelected(f.location.name)}\n      ,\n      forecast: f.forecast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 14\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"hjEn9/CsfvcGu0sfoc9+AcH5//M=\", false, function () {\n  return [useSelector, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/santiagoprario/Desktop/ChallengePersonal/client/src/Components/Home.jsx"],"names":["React","useEffect","useDispatch","useSelector","Search","style","getCurrent","getForecast","deleteCity","Weather","Home","searchedCities","state","searchCities","dispatch","cityCurrent","cityForecast","forecastCities","deleteSelected","city","container","title","actualWeather","location","name","country","current","condition","icon","text","temp_c","forecast","search","length","map","f"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,WAAT,EAAuBC,WAAvB,QAA0C,aAA1C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,SAASC,UAAT,EAAsBC,WAAtB,EAAoCC,UAApC,QAAsD,kBAAtD;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAIA,SAASC,IAAT,GAAgB;AAAA;;AAAA;;AAEZ,QAAMC,cAAc,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,YAAhB,CAAlC;AACA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,WAAW,GAAGZ,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACG,WAAhB,CAA/B;AACA,QAAMC,YAAY,GAAGb,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACI,YAAhB,CAAhC;AACA,QAAMC,cAAc,GAAGd,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACK,cAAhB,CAAlC;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,QAAQ,CAACR,UAAU,EAAX,CAAR;AACAQ,IAAAA,QAAQ,CAACP,WAAW,EAAZ,CAAR;AACH,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMW,cAAc,GAAKC,IAAD,IAAU;AAC7BL,IAAAA,QAAQ,CAACN,UAAU,CAACW,IAAD,CAAX,CAAR;AACJ,GAFD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAEd,KAAK,CAACe,SAAtB;AAAA,4BACA;AAAI,MAAA,SAAS,EAAEf,KAAK,CAACgB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEC;AAAK,MAAA,SAAS,EAAEhB,KAAK,CAACiB,aAAtB;AAAA,gBACEP,WAAW,gBAAG,QAAC,OAAD;AACR,QAAA,IAAI,2BAAEA,WAAW,CAACQ,QAAd,0DAAE,sBAAsBC,IADpB;AAER,QAAA,OAAO,EAAET,WAAF,aAAEA,WAAF,iDAAEA,WAAW,CAAEQ,QAAf,2DAAE,uBAAuBE,OAFxB;AAGR,QAAA,GAAG,0BAAEV,WAAW,CAACW,OAAd,kFAAE,qBAAqBC,SAAvB,0DAAE,sBAAgCC,IAH7B;AAIR,QAAA,SAAS,2BAAEb,WAAW,CAACW,OAAd,mFAAE,sBAAqBC,SAAvB,0DAAE,sBAAgCE,IAJnC;AAKR,QAAA,IAAI,2BAAEd,WAAW,CAACW,OAAd,0DAAE,sBAAqBI,MALnB;AAMR,QAAA,QAAQ,EAAEd,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAEe;AANhB;AAAA;AAAA;AAAA;AAAA,cAAH,GAOP;AARN;AAAA;AAAA;AAAA;AAAA,YAFD,eAaC;AAAK,MAAA,SAAS,EAAE1B,KAAK,CAAC2B,MAAtB;AAAA,6BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAbD,EAgBEf,cAAc,CAACgB,MAAf,GAAwB,CAAxB,IAA6BhB,cAAc,CAACiB,GAAf,CAAoBC,CAAD,iBAC7C,QAAC,OAAD;AACA,MAAA,IAAI,EAAEA,CAAC,CAACZ,QAAF,CAAWC,IADjB;AAEA,MAAA,OAAO,EAAEW,CAAC,CAACZ,QAAF,CAAWE,OAFpB,CAGD;AAHC;AAIA,MAAA,QAAQ,EAAEU,CAAC,CAACJ;AAJZ;AAAA;AAAA;AAAA;AAAA,YAD0B,CAhB/B;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH;;GA/CQrB,I;UAEkBP,W,EACND,W,EACGC,W,EACCA,W,EACEA,W;;;KANlBO,I;AAiDT,eAAeA,IAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport { useDispatch , useSelector } from 'react-redux';\nimport Search from './Search';\nimport style from './Styles/Home.module.css';\nimport { getCurrent , getForecast , deleteCity } from '../Redux/Actions';\nimport Weather from './Weather';\n\n\n\nfunction Home() {\n    \n    const searchedCities = useSelector(state => state.searchCities);\n    const dispatch = useDispatch();\n    const cityCurrent = useSelector(state => state.cityCurrent)\n    const cityForecast = useSelector(state => state.cityForecast)\n    const forecastCities = useSelector(state => state.forecastCities)\n\n    useEffect(() => {\n        dispatch(getCurrent())\n        dispatch(getForecast())\n    }, [])\n    \n    const deleteSelected =  (city) => {\n         dispatch(deleteCity(city))\n    }\n    \n    \n    \n    return (\n        <div className={style.container}>\n        <h2 className={style.title}>WEATHER APP CHALLENGE PERSONAL PAY</h2>\n         <div className={style.actualWeather}>\n          {cityCurrent ? <Weather \n                 name={cityCurrent.location?.name}\n                 country={cityCurrent?.location?.country}\n                 img={cityCurrent.current?.condition?.icon}\n                 condition={cityCurrent.current?.condition?.text}\n                 temp={cityCurrent.current?.temp_c}\n                 forecast={cityForecast?.forecast}\n          /> : 'none'}\n    \n         </div>     \n         <div className={style.search}>\n         <Search />\n         </div>\n         {forecastCities.length > 0 && forecastCities.map((f) => \n             <Weather \n             name={f.location.name}\n             country={f.location.country}\n            //  xClose={deleteSelected(f.location.name)}\n             forecast={f.forecast}\n      />\n         )}\n\n        </div>\n    )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}