{"ast":null,"code":"import axios from 'axios';\nexport const GET_CITY = 'GET_CITY';\nexport const SEARCH_CITY = 'SEARCH_CITY';\nexport function getCurrent(city) {\n  if (!city) {\n    return dispatch => {\n      axios.get(`http://localhost:3001/v1/current`).then(response => {\n        dispatch({\n          type: GET_CITY,\n          payload: response.data\n        });\n      });\n    };\n  }\n\n  return dispatch => {\n    axios.get(`http://localhost:3001/v1/forecast/${city}`).then(response => {\n      console.log(response.data);\n      dispatch({\n        type: SEARCH_CITY,\n        payload: response.data\n      });\n    });\n  };\n}\nexport function getForecast(city) {\n  if (!city) {\n    return dispatch => {\n      axios.get(`http://localhost:3001/v1/forecast`).then(response => {\n        dispatch({\n          type: GET_FORECAST,\n          payload: response.data\n        });\n      });\n    };\n  }\n\n  return dispatch => {\n    axios.get(`http://localhost:3001/v1/forecast/${city}`).then(response => {\n      console.log(response.data);\n      dispatch({\n        type: SEARCH_FORECAST,\n        payload: response.data\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/Users/santiagoprario/Desktop/ChallengePersonal/client/src/Redux/Actions/index.js"],"names":["axios","GET_CITY","SEARCH_CITY","getCurrent","city","dispatch","get","then","response","type","payload","data","console","log","getForecast","GET_FORECAST","SEARCH_FORECAST"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AAEP,OAAO,SAASC,UAAT,CAAqBC,IAArB,EAA2B;AAC9B,MAAI,CAACA,IAAL,EAAW;AACX,WAAQC,QAAD,IAAc;AACnBL,MAAAA,KAAK,CAACM,GAAN,CAAW,kCAAX,EACCC,IADD,CACOC,QAAD,IAAc;AAClBH,QAAAA,QAAQ,CAAC;AACLI,UAAAA,IAAI,EAAER,QADD;AAELS,UAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFb,SAAD,CAAR;AAIA,OANF;AAOD,KARD;AASC;;AACD,SAAQN,QAAD,IAAc;AACnBL,IAAAA,KAAK,CAACM,GAAN,CAAW,qCAAoCF,IAAK,EAApD,EACCG,IADD,CACOC,QAAD,IAAc;AAClBI,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACG,IAArB;AACAN,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEP,WADD;AAELQ,QAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFb,OAAD,CAAR;AAIA,KAPF;AAQD,GATD;AAUH;AAED,OAAO,SAASG,WAAT,CAAsBV,IAAtB,EAA4B;AACjC,MAAI,CAACA,IAAL,EAAW;AACX,WAAQC,QAAD,IAAc;AACnBL,MAAAA,KAAK,CAACM,GAAN,CAAW,mCAAX,EACCC,IADD,CACOC,QAAD,IAAc;AAClBH,QAAAA,QAAQ,CAAC;AACLI,UAAAA,IAAI,EAAEM,YADD;AAELL,UAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFb,SAAD,CAAR;AAIA,OANF;AAOD,KARD;AASC;;AACD,SAAQN,QAAD,IAAc;AACnBL,IAAAA,KAAK,CAACM,GAAN,CAAW,qCAAoCF,IAAK,EAApD,EACCG,IADD,CACOC,QAAD,IAAc;AAClBI,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACG,IAArB;AACAN,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEO,eADD;AAELN,QAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFb,OAAD,CAAR;AAIA,KAPF;AAQD,GATD;AAUD","sourcesContent":["import axios from 'axios';\nexport const GET_CITY = 'GET_CITY';\nexport const SEARCH_CITY = 'SEARCH_CITY';\n\nexport function getCurrent (city) {\n    if (!city) { \n    return (dispatch) => {\n      axios.get(`http://localhost:3001/v1/current`)\n      .then((response) => { \n        dispatch({\n            type: GET_CITY,\n            payload: response.data\n        })\n       })   \n    }\n    }\n    return (dispatch) => {\n      axios.get(`http://localhost:3001/v1/forecast/${city}`)\n      .then((response) => { \n        console.log(response.data)\n        dispatch({\n            type: SEARCH_CITY,\n            payload: response.data\n        })\n       })   \n    }\n}\n\nexport function getForecast (city) {\n  if (!city) { \n  return (dispatch) => {\n    axios.get(`http://localhost:3001/v1/forecast`)\n    .then((response) => { \n      dispatch({\n          type: GET_FORECAST,\n          payload: response.data\n      })\n     })   \n  }\n  }\n  return (dispatch) => {\n    axios.get(`http://localhost:3001/v1/forecast/${city}`)\n    .then((response) => { \n      console.log(response.data)\n      dispatch({\n          type: SEARCH_FORECAST,\n          payload: response.data\n      })\n     })   \n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}