{"ast":null,"code":"var _jsxFileName = \"/Users/santiagoprario/Desktop/ChallengePersonal/client/src/Components/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Search from './Search';\nimport style from './Styles/Home.module.css';\nimport Card from './Card';\nimport { getCurrent, getForecast } from '../Redux/Actions';\nimport Weather from './Weather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const searchedCities = useSelector(state => state.searchCities);\n  const dispatch = useDispatch();\n  const city = useSelector(state => state.city);\n  console.log(city);\n  useEffect(() => {\n    dispatch(getCurrent());\n    dispatch(getForecast());\n  }, []);\n  const date = new Date(city.dt);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.actualWeather,\n      children: city ? /*#__PURE__*/_jsxDEV(Weather, {\n        name: city.name,\n        date: city.dt,\n        temp: city.main\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 19\n      }, this) : 'none'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.search,\n      children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"3IScI/bQFXeBdkFkL4hMvgsAabI=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/santiagoprario/Desktop/ChallengePersonal/client/src/Components/Home.jsx"],"names":["React","useEffect","useDispatch","useSelector","Search","style","Card","getCurrent","getForecast","Weather","Home","searchedCities","state","searchCities","dispatch","city","console","log","date","Date","dt","container","actualWeather","name","main","search"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,WAAT,EAAuBC,WAAvB,QAA0C,aAA1C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,UAAT,EAAsBC,WAAtB,QAAyC,kBAAzC;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAIA,SAASC,IAAT,GAAgB;AAAA;;AAEZ,QAAMC,cAAc,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,YAAhB,CAAlC;AACA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,IAAI,GAAGZ,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACG,IAAhB,CAAxB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,QAAQ,CAACP,UAAU,EAAX,CAAR;AACAO,IAAAA,QAAQ,CAACN,WAAW,EAAZ,CAAR;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,QAAMU,IAAI,GAAG,IAAIC,IAAJ,CAASJ,IAAI,CAACK,EAAd,CAAb;AAGA,sBACI;AAAK,IAAA,SAAS,EAAEf,KAAK,CAACgB,SAAtB;AAAA,4BACC;AAAK,MAAA,SAAS,EAAEhB,KAAK,CAACiB,aAAtB;AAAA,gBACEP,IAAI,gBAAG,QAAC,OAAD;AACD,QAAA,IAAI,EAAEA,IAAI,CAACQ,IADV;AAED,QAAA,IAAI,EAAER,IAAI,CAACK,EAFV;AAGD,QAAA,IAAI,EAAEL,IAAI,CAACS;AAHV;AAAA;AAAA;AAAA;AAAA,cAAH,GAIA;AALN;AAAA;AAAA;AAAA;AAAA,YADD,eASC;AAAK,MAAA,SAAS,EAAEnB,KAAK,CAACoB,MAAtB;AAAA,6BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YATD;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GAnCQf,I;UAEkBP,W,EACND,W,EACJC,W;;;KAJRO,I;AAqCT,eAAeA,IAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport { useDispatch , useSelector } from 'react-redux';\nimport Search from './Search';\nimport style from './Styles/Home.module.css';\nimport Card from './Card';\nimport { getCurrent , getForecast } from '../Redux/Actions';\nimport Weather from './Weather';\n\n\n\nfunction Home() {\n    \n    const searchedCities = useSelector(state => state.searchCities);\n    const dispatch = useDispatch();\n    const city = useSelector(state => state.city)\n    console.log(city)\n\n    useEffect(() => {\n        dispatch(getCurrent())\n        dispatch(getForecast())\n    }, [])\n    \n    const date = new Date(city.dt)\n    \n    \n    return (\n        <div className={style.container}>\n         <div className={style.actualWeather}>\n          {city ? <Weather \n                 name={city.name}\n                 date={city.dt}\n                 temp={city.main}\n          /> : 'none'}\n    \n         </div>   \n         <div className={style.search}>\n         <Search />\n         </div>\n\n\n\n\n\n        </div>\n    )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}