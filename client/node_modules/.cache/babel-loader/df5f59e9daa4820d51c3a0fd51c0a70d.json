{"ast":null,"code":"import { GET_CURRENT, SEARCH_CURRENT, GET_FORECAST, SEARCH_FORECAST, REMOVE_CITY } from '../Actions/index';\nconst initialState = {\n  cityCurrent: {},\n  cityForecast: {},\n  searchCities: false,\n  forecastCities: []\n};\n\nconst Reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_CURRENT:\n      return { ...state,\n        cityCurrent: action.payload\n      };\n\n    case SEARCH_CURRENT:\n      return { ...state,\n        searchCities: state.searchCities + action.payload\n      };\n\n    case GET_FORECAST:\n      return { ...state,\n        cityForecast: action.payload\n      };\n\n    case SEARCH_FORECAST:\n      if (state.forecastCities.length === 5) {\n        return state;\n      }\n\n      return { ...state,\n        forecastCities: state.forecastCities.concat(action.payload)\n      };\n\n    case REMOVE_CITY:\n      console.log(action.payload);\n      return { ...state,\n        forecastCities: state.forecastCities.filter(c => c.location.name !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = Reducer;\nexport default Reducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reducer\");","map":{"version":3,"sources":["/Users/santiagoprario/Desktop/ChallengePersonal/client/src/Redux/Reducer/index.js"],"names":["GET_CURRENT","SEARCH_CURRENT","GET_FORECAST","SEARCH_FORECAST","REMOVE_CITY","initialState","cityCurrent","cityForecast","searchCities","forecastCities","Reducer","state","action","type","payload","length","concat","console","log","filter","c","location","name"],"mappings":"AAAA,SAAQA,WAAR,EAAsBC,cAAtB,EAAuCC,YAAvC,EAAsDC,eAAtD,EAAwEC,WAAxE,QAA0F,kBAA1F;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAG,EADG;AAEjBC,EAAAA,YAAY,EAAG,EAFE;AAGjBC,EAAAA,YAAY,EAAE,KAHG;AAIjBC,EAAAA,cAAc,EAAE;AAJC,CAArB;;AAOA,MAAMC,OAAO,GAAG,YAAgC;AAAA,MAA/BC,KAA+B,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKb,WAAL;AACK,aAAO,EACH,GAAGW,KADA;AAEHL,QAAAA,WAAW,EAAEM,MAAM,CAACE;AAFjB,OAAP;;AAIL,SAAKb,cAAL;AACK,aAAO,EACH,GAAGU,KADA;AAEHH,QAAAA,YAAY,EAAGG,KAAK,CAACH,YAAN,GAAqBI,MAAM,CAACE;AAFxC,OAAP;;AAIL,SAAKZ,YAAL;AACK,aAAO,EACH,GAAGS,KADA;AAEHJ,QAAAA,YAAY,EAAGK,MAAM,CAACE;AAFnB,OAAP;;AAIL,SAAKX,eAAL;AACI,UAAIQ,KAAK,CAACF,cAAN,CAAqBM,MAArB,KAAgC,CAApC,EAAuC;AACnC,eAAOJ,KAAP;AACH;;AACD,aAAO,EACF,GAAGA,KADD;AAEFF,QAAAA,cAAc,EAAGE,KAAK,CAACF,cAAN,CAAqBO,MAArB,CAA4BJ,MAAM,CAACE,OAAnC;AAFf,OAAP;;AAIJ,SAAKV,WAAL;AACGa,MAAAA,OAAO,CAACC,GAAR,CAAYN,MAAM,CAACE,OAAnB;AACG,aAAO,EACL,GAAGH,KADE;AAELF,QAAAA,cAAc,EAAGE,KAAK,CAACF,cAAN,CAAqBU,MAArB,CAA6BC,CAAD,IAAOA,CAAC,CAACC,QAAF,CAAWC,IAAX,KAAoBV,MAAM,CAACE,OAA9D;AAFZ,OAAP;;AAIN;AACA,aAAOH,KAAP;AA/BA;AAiCH,CAlCD;;KAAMD,O;AAsCN,eAAeA,OAAf","sourcesContent":["import {GET_CURRENT , SEARCH_CURRENT , GET_FORECAST , SEARCH_FORECAST , REMOVE_CITY} from '../Actions/index';\n\nconst initialState = {\n    cityCurrent : {},\n    cityForecast : {},\n    searchCities: false,\n    forecastCities: [],\n};\n\nconst Reducer = (state=initialState, action) => {\n    switch (action.type) {\n    case GET_CURRENT :\n         return {\n             ...state,\n             cityCurrent: action.payload,\n         }\n    case SEARCH_CURRENT :\n         return {\n             ...state,\n             searchCities : state.searchCities + action.payload,\n         }\n    case GET_FORECAST :\n         return {\n             ...state,\n             cityForecast : action.payload,\n            }\n    case SEARCH_FORECAST :\n        if (state.forecastCities.length === 5) {\n            return state;\n        }\n        return {\n             ...state,\n             forecastCities : state.forecastCities.concat(action.payload),\n            }  \n    case REMOVE_CITY :\n       console.log(action.payload)\n          return {\n            ...state,\n            forecastCities : state.forecastCities.filter((c) => c.location.name !== action.payload)\n        }   \n    default :\n    return state;\n    }\n}\n\n\n\nexport default Reducer;"]},"metadata":{},"sourceType":"module"}